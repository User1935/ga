name: format-terraform-nonDocker
on: 
  push:
    branches:
      - 'main'
  
jobs:
  pre-commit:
    name: 'Pre-Commit'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3

      - name: 'Pre-Commit'
        continue-on-error: true
        uses: ./.github/actions/pre-commit

      - name: 'get outputs'
        id: pre-commit
        run: |
          echo $(cat something.txt)
          echo ::set-output name=output::$(cat something.txt)
          echo FINISHED PRE-COMMIT

      - name: Create a File with something
        id: file
        run: |
          echo "::debug:: File-Content: ${{ steps.pre-commit.outputs.filecontent }}"
          sudo apt-get install colorized-logs
          something.txt | ansi2html > temp.html
          echo "::debug:: Setting Output"
          echo ::set-output name=html:: $(cat temp.html)

      - name: Comment-push
        if: github.event_name != 'pull_request'
        uses: ./.github/actions/commit-comment  #'peter-evans/commit-comment@v1'
        with:
          body: ${{ steps.pre-commit.outputs.output }}
          
      #- name: Write output for PR
      #  uses: actions/github-script@v4.1.0
      #  with:
      #    script: |
      #      const output = `#### Terraform Format and Style ðŸ–Œ\`${{ needs.format.outputs.fmtout }}\`
      #      #### Terraform Plan ðŸ“–\`${{ steps.plan.outcome }}\`
      #      <details><summary>Show Plan Summary</summary>
      #      
      #      \`\`\`
      #      ${{ steps.changes.outputs.changes }}
      #      \`\`\`
      #       </details>
      #      <details><summary>Show Full Log</summary>
      #      
      #      \`\`\`
      #      ${{ steps.plan.outputs.logplan }}
      #      \`\`\`
      #      
      #      </details>
      #      
      #      View command outputs via Artifacts [here](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
      #      *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
      #      github.issues.createComment({
      #        issue_number: context.issue.number,
      #        owner: context.repo.owner,
      #        repo: context.repo.repo,
      #        body: "'"$OUTPUT"'"
      #      })
#